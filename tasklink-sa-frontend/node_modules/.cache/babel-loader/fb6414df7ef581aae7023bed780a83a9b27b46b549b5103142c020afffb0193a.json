{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  currentLocation: null,\n  loading: false,\n  error: null\n};\nconst locationSlice = createSlice({\n  name: 'location',\n  initialState,\n  reducers: {\n    setCurrentLocation: (state, action) => {\n      state.currentLocation = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    setLocationLoading: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    setLocationError: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setCurrentLocation,\n  setLocationLoading,\n  setLocationError\n} = locationSlice.actions;\nexport default locationSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentLocation","loading","error","locationSlice","name","reducers","setCurrentLocation","state","action","payload","setLocationLoading","setLocationError","actions","reducer"],"sources":["c:/Users/owner/OneDrive - Process Steel/Documents/GitHub/bolt.diy/tasklink-sa-frontend/src/store/slices/locationSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface LocationState {\r\n  currentLocation: {\r\n    latitude: number;\r\n    longitude: number;\r\n    address: string;\r\n  } | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: LocationState = {\r\n  currentLocation: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst locationSlice = createSlice({\r\n  name: 'location',\r\n  initialState,\r\n  reducers: {\r\n    setCurrentLocation: (state, action: PayloadAction<{ latitude: number; longitude: number; address: string }>) => {\r\n      state.currentLocation = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    setLocationLoading: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    setLocationError: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setCurrentLocation, setLocationLoading, setLocationError } = locationSlice.actions;\r\nexport default locationSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAY7D,MAAMC,YAA2B,GAAG;EAClCC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,aAAa,GAAGL,WAAW,CAAC;EAChCM,IAAI,EAAE,UAAU;EAChBL,YAAY;EACZM,QAAQ,EAAE;IACRC,kBAAkB,EAAEA,CAACC,KAAK,EAAEC,MAA+E,KAAK;MAC9GD,KAAK,CAACP,eAAe,GAAGQ,MAAM,CAACC,OAAO;MACtCF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDQ,kBAAkB,EAAGH,KAAK,IAAK;MAC7BA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDS,gBAAgB,EAAEA,CAACJ,KAAK,EAAEC,MAA6B,KAAK;MAC1DD,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,kBAAkB;EAAEI,kBAAkB;EAAEC;AAAiB,CAAC,GAAGR,aAAa,CAACS,OAAO;AACjG,eAAeT,aAAa,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}