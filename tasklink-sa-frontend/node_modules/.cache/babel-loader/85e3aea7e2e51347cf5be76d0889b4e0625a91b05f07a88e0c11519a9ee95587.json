{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  jobs: [],\n  currentJob: null,\n  loading: false,\n  error: null\n};\nconst jobsSlice = createSlice({\n  name: 'jobs',\n  initialState,\n  reducers: {\n    fetchJobsStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchJobsSuccess: (state, action) => {\n      state.jobs = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    fetchJobsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    setCurrentJob: (state, action) => {\n      state.currentJob = action.payload;\n    }\n  }\n});\nexport const {\n  fetchJobsStart,\n  fetchJobsSuccess,\n  fetchJobsFailure,\n  setCurrentJob\n} = jobsSlice.actions;\nexport default jobsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","jobs","currentJob","loading","error","jobsSlice","name","reducers","fetchJobsStart","state","fetchJobsSuccess","action","payload","fetchJobsFailure","setCurrentJob","actions","reducer"],"sources":["c:/Users/owner/OneDrive - Process Steel/Documents/GitHub/bolt.diy/tasklink-sa-frontend/src/store/slices/jobsSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface Job {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n  location: string;\r\n  budget: number;\r\n  status: 'open' | 'in_progress' | 'completed';\r\n}\r\n\r\ninterface JobsState {\r\n  jobs: Job[];\r\n  currentJob: Job | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: JobsState = {\r\n  jobs: [],\r\n  currentJob: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst jobsSlice = createSlice({\r\n  name: 'jobs',\r\n  initialState,\r\n  reducers: {\r\n    fetchJobsStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    fetchJobsSuccess: (state, action: PayloadAction<Job[]>) => {\r\n      state.jobs = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    fetchJobsFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    setCurrentJob: (state, action: PayloadAction<Job>) => {\r\n      state.currentJob = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchJobsStart,\r\n  fetchJobsSuccess,\r\n  fetchJobsFailure,\r\n  setCurrentJob,\r\n} = jobsSlice.actions;\r\n\r\nexport default jobsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAmB7D,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACRC,cAAc,EAAGC,KAAK,IAAK;MACzBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,gBAAgB,EAAEA,CAACD,KAAK,EAAEE,MAA4B,KAAK;MACzDF,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO;MAC3BH,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDS,gBAAgB,EAAEA,CAACJ,KAAK,EAAEE,MAA6B,KAAK;MAC1DF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,aAAa,EAAEA,CAACL,KAAK,EAAEE,MAA0B,KAAK;MACpDF,KAAK,CAACP,UAAU,GAAGS,MAAM,CAACC,OAAO;IACnC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXJ,cAAc;EACdE,gBAAgB;EAChBG,gBAAgB;EAChBC;AACF,CAAC,GAAGT,SAAS,CAACU,OAAO;AAErB,eAAeV,SAAS,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}