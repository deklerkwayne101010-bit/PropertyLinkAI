{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport authReducer from './slices/authSlice';\nimport jobsReducer from './slices/jobsSlice';\nimport uiReducer from './slices/uiSlice';\nimport chatReducer from './slices/chatSlice';\nimport locationReducer from './slices/locationSlice';\nimport notificationsReducer from './slices/notificationsSlice';\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    jobs: jobsReducer,\n    ui: uiReducer,\n    chat: chatReducer,\n    location: locationReducer,\n    notifications: notificationsReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(sagaMiddleware)\n});","map":{"version":3,"names":["configureStore","createSagaMiddleware","authReducer","jobsReducer","uiReducer","chatReducer","locationReducer","notificationsReducer","sagaMiddleware","store","reducer","auth","jobs","ui","chat","location","notifications","middleware","getDefaultMiddleware","concat"],"sources":["c:/Users/owner/OneDrive - Process Steel/Documents/GitHub/bolt.diy/tasklink-sa-frontend/src/store/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport authReducer from './slices/authSlice';\r\nimport jobsReducer from './slices/jobsSlice';\r\nimport uiReducer from './slices/uiSlice';\r\nimport chatReducer from './slices/chatSlice';\r\nimport locationReducer from './slices/locationSlice';\r\nimport notificationsReducer from './slices/notificationsSlice';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    jobs: jobsReducer,\r\n    ui: uiReducer,\r\n    chat: chatReducer,\r\n    location: locationReducer,\r\n    notifications: notificationsReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(sagaMiddleware),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAOC,oBAAoB,MAAM,6BAA6B;AAE9D,MAAMC,cAAc,GAAGP,oBAAoB,CAAC,CAAC;AAE7C,OAAO,MAAMQ,KAAK,GAAGT,cAAc,CAAC;EAClCU,OAAO,EAAE;IACPC,IAAI,EAAET,WAAW;IACjBU,IAAI,EAAET,WAAW;IACjBU,EAAE,EAAET,SAAS;IACbU,IAAI,EAAET,WAAW;IACjBU,QAAQ,EAAET,eAAe;IACzBU,aAAa,EAAET;EACjB,CAAC;EACDU,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACX,cAAc;AAChD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}